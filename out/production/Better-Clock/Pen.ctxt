#BlueJ class context
comment0.target=Pen
comment0.text=\r\n<B><I>Copyright\ 2006</I></B>\ by\ Ken\ Lambert\ and\ Martin\ Osborne.\r\n<BR><BR>\r\nThe\ behavior\ of\ all\ pens.\r\n
comment1.params=
comment1.target=void\ down()
comment1.text=\ \ \ \r\n\ \ \ Action\:\ The\ pen\ lowers\ itself\ to\ the\ drawing\ surface.\r\n
comment10.params=degrees
comment10.target=void\ turn(double)
comment10.text=\ \ \ \r\n\ \ \ Action\:\ The\ pen\ adds\ the\ indicated\ degrees\ to\ its\ current\ direction.\ \r\n\ \ \ Positive\ degrees\ correspond\ to\ turning\ counterclockwise.\ The\ degrees\ can\ \r\n\ \ \ be\ an\ integer\ or\ floating-point\ number.\r\n\ \ \ Example\:\ pen.turn(-45);\ \ Rotate\ the\ pen\ 45\ degrees\ clockwise.\r\n
comment11.params=
comment11.target=void\ up()
comment11.text=\ \ \ \r\n\ \ \ Action\:\ The\ pen\ raises\ itself\ from\ the\ drawing\ surface.\r\n
comment2.params=text
comment2.target=void\ drawString(java.lang.String)
comment2.text=\ \ \ \r\n\ \ \ Action\:\ Draws\ the\ string\ at\ the\ pen's\ position.\r\n
comment3.params=
comment3.target=void\ home()
comment3.text=\ \ \ \r\n\ \ \ The\ pen\ jumps\ to\ the\ center\ of\ the\ graphics\ window\ without\ drawing\r\n\ \ \ and\ points\ north.\r\n
comment4.params=distance
comment4.target=void\ move(double)
comment4.text=\ \ \ \r\n\ \ \ Action\:\ The\ pen\ moves\ the\ specified\ distance\ in\ the\ current\ direction.\ \r\n\ \ \ The\ distance\ can\ be\ an\ integer\ or\ floating-point\ number\ and\ is\ measured\ \r\n\ \ \ in\ pixels\ (picture\ elements).\ The\ size\ of\ a\ pixel\ depends\ on\ the\ \r\n\ \ \ monitor\u00D5s\ resolution.\ For\ instance,\ when\ we\ say\ that\ a\ monitor's\ \r\n\ \ \ resolution\ is\ 800\ by\ 600,\ we\ mean\ that\ the\ monitor\ is\ 800\ pixels\ wide\ \r\n\ \ \ and\ 600\ pixels\ high.\r\n
comment5.params=x\ y
comment5.target=void\ move(double,\ double)
comment5.text=\ \ \ \r\n\ \ \ Action\:\ Moves\ the\ pen\ to\ the\ position\ (x,\ y).\r\n
comment6.params=color
comment6.target=void\ setColor(java.awt.Color)
comment6.text=\ \ \ \r\n\ \ \ Action\:\ Sets\ the\ pen's\ color\ to\ the\ specified\ color.\r\n
comment7.params=direction
comment7.target=void\ setDirection(double)
comment7.text=\ \ \ \r\n\ \ \ Action\:\ The\ pen\ points\ in\ the\ indicated\ direction.\ Due\ east\ corresponds\ \r\n\ \ \ to\ 0\ degrees,\ north\ to\ 90\ degrees,\ west\ to\ 180\ degrees,\ and\ south\ to\ 270\ \r\n\ \ \ degrees.\ Because\ there\ are\ 360\ degrees\ in\ a\ circle,\ setting\ the\ \r\n\ \ \ direction\ to\ 400\ would\ be\ equivalent\ to\ 400\ -\ 360\ or\ 40\ and\ setting\ it\ \r\n\ \ \ to\ -30\ would\ be\ equivalent\ to\ 360\ -\ 30\ or\ 330.\r\n\ \ \ Example\:\ pen.setDirection(90);\ \ \ Make\ the\ pen\ point\ due\ north.\r\n
comment8.params=width
comment8.target=void\ setWidth(int)
comment8.text=\ \ \ \r\n\ \ \ Action\:\ Sets\ the\ pen's\ width\ to\ the\ specified\ width\ (the\ default\ width\ is\ 2\ pixels).\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\ \ \ \r\n\ \ \ Action\:\ Returns\ information\ about\ the\ pen's\ state.\r\n
numComments=12
